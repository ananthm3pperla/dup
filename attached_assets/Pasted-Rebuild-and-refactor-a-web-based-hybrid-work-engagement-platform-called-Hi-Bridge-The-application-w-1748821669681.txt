Rebuild and refactor a web-based hybrid work engagement platform called Hi-Bridge. The application was originally built using Supabase and now must be fully hosted on Replit’s infrastructure.

🧩 Core Functionalities:
User Roles: Employee, Manager, HR — each with tailored access and dashboards.

Anchor Day Scheduling: Managers assign; employees vote.

Daily Pulse Checks: Feedback forms submitted by employees to monitor morale.

Gamification: Points for participation, leaderboard for teams.

Dashboards:

Managers: Heatmaps, team sentiment trends.

HR: Engagement and policy compliance metrics.

Policy Management: Role-based hybrid rules, manager overrides, and compliance tracking.

Beta Program: "Hi-Bridge Games" mode — photo uploads, points bonuses, public leaderboard.

🔁 Supabase to Replit Refactor Requirements:
Replace PostgreSQL (Supabase) with Replit Database (use SQLite for structured queries or Replit Key-Value DB for simplicity).

Replace Supabase Auth with custom Express-based session auth or Replit Auth Helper.

Substitute real-time features with WebSockets or polling if needed.

Move file handling (photo uploads) to Replit filesystem or stub with placeholder logic.

Eliminate Supabase-specific SDKs and queries entirely.

🧼 Codebase & Quality Expectations:
Use modular architecture: Separate routes, models, controllers, and services.

Apply SOLID principles and clean coding standards (e.g., meaningful names, separation of concerns).

Include comments and JSDoc annotations for clarity.

Implement basic error handling and validation for all user inputs.

Set up .env configuration, use dotenv for environment variables.

Use async/await, avoid callback hell or deeply nested logic.

Include basic unit test scaffolding using a lightweight framework like Jest or Vitest.

Prioritize readability and maintainability for future enterprise scaling.

🌐 Platform & Interface:
Web-based, online-only

Interface language: English

Hosting: Replit native

UI style: Professional, clean, and data-focused with gamified UX elements

Final output should be fully runnable on Replit, with an organized file structure and comments to guide future developers.